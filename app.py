import streamlit as st
from code_hack_optimized import run_workflow

st.set_page_config(page_title="AI DevOps Workflow", layout="wide")
st.title("🚀 AI-Powered Software Development Workflow")

if st.button("Start Workflow 🚦"):
    with st.spinner("Running the automated dev workflow..."):
        result = run_workflow()

    st.success("✅ Workflow completed!")

    st.subheader("📌 User Requirement")
    st.code(result['user_requirement'], language='markdown')

    st.subheader("📝 Generated User Stories")
    st.code(result['generated_user_stories'], language='python')

    st.subheader("🧑‍💼 PO Review Comments")
    st.code(result['po_review_comment'], language='markdown')

    st.subheader("🧱 Design Document")
    st.code(result['design_doc'], language='markdown')

    st.subheader("🔍 Design Doc Review")
    st.code(result['design_doc_review_comments'], language='markdown')

    st.subheader("💻 Generated Code")
    st.code(result['generated_code'], language='python')

    st.subheader("🧪 Code Review Comments")
    st.code(result['code_review_comments'], language='markdown')

    st.subheader("🔐 Security Review Comments")
    st.code(result['security_review_comments'], language='markdown')

    st.subheader("📋 Test Cases")
    st.code(result['generated_test_cases'], language='python')

    st.subheader("🧠 Test Case Review")
    st.code(result['test_case_review_comments'], language='markdown')

    st.subheader("✅ QA Testing Result")
    st.code(result['qa_testing_result'], language='markdown')

    st.subheader("📦 Deployment Plan")
    st.code(result['deployment_plan'], language='markdown')

    st.subheader("📊 Monitoring Plan")
    st.code(result['monitoring_plan'], language='markdown')

    st.subheader("🔧 Maintenance Plan")
    st.code(result['maintenance_plan'], language='markdown')

    st.info("Scroll through each section to see what was auto-generated by the system.")

else:
    st.info("Click the button above to run the AI-powered development workflow.")

